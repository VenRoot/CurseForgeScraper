name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build for Linux
      run: npm run build:lin

    - name: Build for Windows
      run: npm run build:win

    - name: Get version from package.json
      id: package_version
      uses: martinbeentjes/npm-get-version-action@v1.3.1

    - name: Create GitHub Release
      id: create_release
      uses: gh-actions/create-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ steps.package_version.outputs.version }}
        name: Release ${{ steps.package_version.outputs.version }}
        body: Release of version ${{ steps.package_version.outputs.version }}
        draft: false
        prerelease: ${{ contains(steps.package_version.outputs.version, '-pre') || contains(steps.package_version.outputs.version, '-rc') }}

    - name: Upload Linux binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/lin/curseforgescraper
        asset_name: curseforgescraper-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/win/curseforgescraper.exe
        asset_name: curseforgescraper-windows.exe
        asset_content_type: application/octet-stream
